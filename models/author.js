var mongoose = require('mongoose');

var Schema = mongoose.Schema;

var AuthorSchema = new Schema(
  {
    first_name: {type: String, required: true, maxlength: 100},
    family_name: {type: String, required: true, maxlength: 100},
    dob: {type: Date}, //Date of birth
    dod: {type: Date} //Date of death
  }
);


//Virtual for auhtor's full first_name
//so basically i think this is a 'view' in SQL but like you have seen this before lol
AuthorSchema
.virtual('name')
.get(function(){
  return this.family_name + ', ' + this.first_name; //so whoever called this will have their first and last name values retreived and return in a single string
});

//Virtual for author's lifespan
AuthorSchema
.virtual('lifespan')
.get(function(){
  return (this.dod.getYear() - this.dob.getYear()).toString(); //we retreive
}
);

//Virtual for author's URL
//This will make more sense once we actually do routing but every author has his own url so we can pull up his page
AuthorSchema
.virtual('url')
.get(function() {
  return '/catalog/author/' + this._id; //so we are using the unique id autogenerated by mongo to our advantage here
});

module.exports = mongoose.model('Author', AuthorSchema); //export dat boiiii
